[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images/device
network = lte.simulations.cars.Highway
seed-set = ${5,1000,21459,45521,5646}
##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 120s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
#*.veinsManager.moduleType = "lte.corenetwork.nodes.cars.Car"
#*.veinsManager.moduleName = "car"
#*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
#*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
#*.car[*].mobilityType = "VeinsInetMobility"
#Nodes' mobility #################################MMasoud
*.eNodeB*.mobility.constraintAreaMaxX = 1432m	
*.eNodeB*.mobility.constraintAreaMaxY = 1432m	
*.eNodeB*.mobility.constraintAreaMaxZ = 0m    
*.eNodeB*.mobility.constraintAreaMinX = 0m    
*.eNodeB*.mobility.constraintAreaMinY = 0m    
*.eNodeB*.mobility.constraintAreaMinZ = 0m    
#*.eNodeB0.mobility.speed = 12mps
#*.eNodeB0.mobility.angle = 45deg	
*.ue[*].mobility.constraintAreaMaxX = 1432m
*.ue[*].mobility.constraintAreaMaxY = 1432m
*.ue[*].mobility.constraintAreaMaxZ = 0m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.constraintAreaMinZ = 0m
#*.ue[*].mobility.speed = 15mps
#*.ue[*].mobility.angle = 45deg
*.eNodeB0.mobility.typename = "BonnMotionMobility"
*.eNodeB0.mobility.traceFile = "EnodeB0Pos.movements"
*.eNodeB0.mobility.is3D = false
*.eNodeB0.mobility.nodeId = -1	

*.eNodeB1.mobility.typename = "BonnMotionMobility"
*.eNodeB1.mobility.traceFile = "Car0PosSeed4.movements"
*.eNodeB1.mobility.is3D = false
*.eNodeB1.mobility.nodeId = -1	

*.eNodeB2.mobility.typename = "BonnMotionMobility"
*.eNodeB2.mobility.traceFile = "Car1PosSeed4.movements"
*.eNodeB2.mobility.is3D = false
*.eNodeB2.mobility.nodeId = -1	

*.eNodeB3.mobility.typename = "BonnMotionMobility"
*.eNodeB3.mobility.traceFile = "Car2PosSeed4.movements"
*.eNodeB3.mobility.is3D = false
*.eNodeB3.mobility.nodeId = -1	

*.eNodeB4.mobility.typename = "BonnMotionMobility"
*.eNodeB4.mobility.traceFile = "Car3PosSeed4.movements"
*.eNodeB4.mobility.is3D = false
*.eNodeB4.mobility.nodeId = -1	

*.eNodeB5.mobility.typename = "BonnMotionMobility"
*.eNodeB5.mobility.traceFile = "Car4PosSeed4.movements"
*.eNodeB5.mobility.is3D = false
*.eNodeB5.mobility.nodeId = -1	

*.eNodeB6.mobility.typename = "BonnMotionMobility"
*.eNodeB6.mobility.traceFile = "Car5PosSeed4.movements"
*.eNodeB6.mobility.is3D = false
*.eNodeB6.mobility.nodeId = -1	
##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
#*.car[*].lteNic.phy.dynamicCellAssociation = true

#**.car[*].masterId = 1     # useless if dynamic association is disabled
#**.car[*].macCellId = 1    # useless if dynamic association is disabled
**.eNodeB*.macCellId = index+1
**.eNodeB*.macNodeId = index+1
**.eNodeBCount = 2
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.numUe = ${numUEs=1ThirdEx}

# RUs
**.cellInfo.ruRange = 50
**.cellInfo.ruTxPower = "50,50,50;"
**.cellInfo.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.cellInfo.numRbDl = 100
**.cellInfo.numRbUl = 100
**.numBands = 25
**.fbDelay = 1

# Enable handover
*.ue[*].lteNic.phy.enableHandover = true
*.eNodeB*.lteNic.phy.enableHandover = true
**.broadcastMessageInterval = 0.5s

# X2 and SCTP configuration
*.eNodeB*.numX2Apps = 6    # one x2App per peering eNodeB
*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
##enodeB0###################################################################################
*.eNodeB0.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"
*.eNodeB0.x2App[1].client.connectAddress = "eNodeB2%x2ppp0"
*.eNodeB0.x2App[2].client.connectAddress = "eNodeB3%x2ppp0"
*.eNodeB0.x2App[3].client.connectAddress = "eNodeB4%x2ppp0"
*.eNodeB0.x2App[4].client.connectAddress = "eNodeB5%x2ppp0"
*.eNodeB0.x2App[5].client.connectAddress = "eNodeB6%x2ppp0"
##enodeB1###################################################################################
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB0%x2ppp0"	
*.eNodeB1.x2App[1].client.connectAddress = "eNodeB2%x2ppp1"
*.eNodeB1.x2App[2].client.connectAddress = "eNodeB3%x2ppp1"
*.eNodeB1.x2App[3].client.connectAddress = "eNodeB4%x2ppp1"
*.eNodeB1.x2App[4].client.connectAddress = "eNodeB5%x2ppp1"
*.eNodeB1.x2App[5].client.connectAddress = "eNodeB6%x2ppp1"
##enodeB2###################################################################################
*.eNodeB2.x2App[0].client.connectAddress = "eNodeB0%x2ppp1" 
*.eNodeB2.x2App[1].client.connectAddress = "eNodeB1%x2ppp1"
*.eNodeB2.x2App[2].client.connectAddress = "eNodeB3%x2ppp2"
*.eNodeB2.x2App[3].client.connectAddress = "eNodeB4%x2ppp2"
*.eNodeB2.x2App[4].client.connectAddress = "eNodeB5%x2ppp2"
*.eNodeB2.x2App[5].client.connectAddress = "eNodeB6%x2ppp2"
##enodeB3###################################################################################
*.eNodeB3.x2App[0].client.connectAddress = "eNodeB0%x2ppp2" 
*.eNodeB3.x2App[1].client.connectAddress = "eNodeB1%x2ppp2"
*.eNodeB3.x2App[2].client.connectAddress = "eNodeB2%x2ppp2"
*.eNodeB3.x2App[3].client.connectAddress = "eNodeB4%x2ppp3"
*.eNodeB3.x2App[4].client.connectAddress = "eNodeB5%x2ppp3"
*.eNodeB3.x2App[5].client.connectAddress = "eNodeB6%x2ppp3"
##enodeB4###################################################################################
*.eNodeB4.x2App[0].client.connectAddress = "eNodeB0%x2ppp3"   
*.eNodeB4.x2App[1].client.connectAddress = "eNodeB1%x2ppp3"
*.eNodeB4.x2App[2].client.connectAddress = "eNodeB2%x2ppp3"
*.eNodeB4.x2App[3].client.connectAddress = "eNodeB3%x2ppp3"
*.eNodeB4.x2App[4].client.connectAddress = "eNodeB5%x2ppp4"
*.eNodeB4.x2App[5].client.connectAddress = "eNodeB6%x2ppp4"
##enodeB5###################################################################################
*.eNodeB5.x2App[0].client.connectAddress = "eNodeB0%x2ppp4"	
*.eNodeB5.x2App[1].client.connectAddress = "eNodeB1%x2ppp4"
*.eNodeB5.x2App[2].client.connectAddress = "eNodeB2%x2ppp4"
*.eNodeB5.x2App[3].client.connectAddress = "eNodeB3%x2ppp4"
*.eNodeB5.x2App[4].client.connectAddress = "eNodeB4%x2ppp4"
*.eNodeB5.x2App[5].client.connectAddress = "eNodeB6%x2ppp5"
##enodeB6###################################################################################
*.eNodeB6.x2App[0].client.connectAddress = "eNodeB0%x2ppp5"	    
*.eNodeB6.x2App[1].client.connectAddress = "eNodeB1%x2ppp5"	
*.eNodeB6.x2App[2].client.connectAddress = "eNodeB2%x2ppp5"	
*.eNodeB6.x2App[3].client.connectAddress = "eNodeB3%x2ppp5"	
*.eNodeB6.x2App[4].client.connectAddress = "eNodeB4%x2ppp5"	
*.eNodeB6.x2App[5].client.connectAddress = "eNodeB5%x2ppp5"	
##################################################################### 
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false



# ----------------------------------------------------------------------------- #
# Config "Cbr-Uplink"
#
[Config Cbr-UL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 200
*.server.udpApp[*].typename = "CbrReceiver"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 

*.ue[*].numUdpApps = 1
*.ue[*].udpApp[0].typename = "CbrSender"
*.ue[*].udpApp[0].destAddress = "server"
*.ue[*].udpApp[0].destPort = 3000 + ancestorIndex(1)


# ----------------------------------------------------------------------------- #
# Config "Cbr-Downlink"
#
[Config Cbr-DL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 200
*.server.udpApp[*].typename = "CbrSender"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 
*.server.udpApp[*].destAddress = "ue[" + string(ancestorIndex(0)) + "]"
*.server.udpApp[*].startingTime = 0.05s


*.ue[*].numUdpApps = 1
*.ue[*].udpApp[0].typename = "CbrReceiver"


# ----------------------------------------------------------------------------- #
# Config "Cbr-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#
[Config VoIP-D2D]

# Enable D2D for the eNodeB and the UEs involved in direct commulteNications
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].lteNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.lteNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB*.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

*.car[*].numUdpApps = 1
*.car[0..4].udpApp[0].typename = "VoIPSender"
*.car[0..4].udpApp[0].destAddress = "car[" + string(ancestorIndex(1)+5) + "]"

*.car[5..9].udpApp[0].typename = "VoIPReceiver"



# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, a transmitting car sends periodic alert messages to neighboring vehicles
#
[Config D2DMulticast]

### Enable D2D for the eNodeB and the UEs involved in direct communications ###
*.eNodeB*.nicType = "LteNicEnbD2D"
*.car[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only.
# Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=7}

### Traffic configuration: one-to-many traffic between UEs (car[0] --> car[1..9]) ###
*.car[*].numUdpApps = 1

# Transmitter
*.car[0].udpApp[*].typename = "AlertSender"
*.car[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.car[0].udpApp[*].startTime = uniform(0s,0.02s)
*.car[0].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[0].udpApp[*].destPort = 1000

# Receivers (they must belong to the above multicast group)
*.car[1..9].udpApp[*].typename = "AlertReceiver"
*.car[1..9].udpApp[*].localPort = 1000

# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"



